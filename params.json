{
  "name": "CanvasPlot",
  "tagline": "A JavaScript plotting library based on D3.js for visualizing large data sets",
  "body": "# CanvasPlot\r\n\r\nCanvasPlot is a JavaScript plot library that is able to interactively visualize large data sets by using the `<canvas>` element.\r\n\r\n## Usage\r\n\r\nA plot object for a scatter plot can be created in an empty `<div>` with id `plotcontainer` via:\r\n\r\n\tvar scatterPlot = new CanvasDataPlot(d3.select(\"#plotcontainer\"), [600, 350], {\r\n\t\txAxisLabel: \"IQ\",\r\n\t\tyAxisLabel: \"Test Score\",\r\n\t\tmarkerLineWidth: 3,\r\n\t\tmarkerRadius: 5\r\n\t});\r\n\r\nTo add data to `scatterPlot `, you need a data set consisting of an array of x/y pairs. The pairs have to ordered ascendingly by x value.\r\n\r\n\tvar data = [[-1,5], [0.5,6], [5,-2.5], [6,1], [10,9], [20,-55]];\r\n\tscatterPlot.addDataSet(\"dataSet1\", \"Test Results\", data, \"steelblue\");\r\n\r\nThis results in the following plot being displayed:\r\n\r\nTODO: add Plot!\r\n\r\n## Supported Plot Types\r\n\r\n### Scatter Plot\r\n\r\nFor an example of the `CanvasDataPlot` class, see above.\r\n\r\n### Time Series Plot\r\n\r\n### Vector Time Series Plot\r\n\r\n### Plot Groups\r\n\r\nThe `CanvasDataPlotGroup` class allows to group multiple plots and to synchronize their views.\r\n\r\n# API\r\n\r\nAll plot types share a common interface:\r\n\r\n* one\r\n* two with `code`\r\n* three\r\n\r\nThe interface of the `CanvasDataPlotGroup` consists of:\r\n\r\n* one\r\n* two with `code`\r\n* three\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}